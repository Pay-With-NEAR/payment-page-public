{"version":3,"file":"static/js/447.58d66871.chunk.js","mappings":"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","sources":["components/agreement/agreement.tsx","components/proceed-button/proceed-button.tsx","ui/input/input.tsx","ui/icon/icon.tsx","components/currency-input/currency-select/currency-select.tsx","components/currency-input/currency-input.tsx","ui/widget-container/widget-container.tsx","components/expiry-timer/expiry-timer.tsx","components/pay-widget/pay-widget.tsx","helpers/main.ts","pages/payment-page/model.ts","pages/payment-page/payment-page.tsx","pages/payment-page/index.ts"],"sourcesContent":["import block from \"bem-cn\";\nimport \"./agreement.scss\";\n\nconst b = block(\"pay-with-near-agreement\");\n\ntype Props = {\n  className?: string;\n};\n\nexport const Agreement: React.FC<Props> = (props) => {\n  const { className } = props;\n\n  return (\n    <div className={b.mix(className)}>\n      By continuing, you agree to this{\" \"}\n      <a\n        href=\"https://nearpay.co/privacy_policy\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        privacy policy\n      </a>{\" \"}\n      and{\" \"}\n      <a\n        href=\"https://nearpay.co/terms_of_use\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        terms of service\n      </a>\n    </div>\n  );\n};\n","import classNames from \"classnames\";\nimport React, {\n  AnchorHTMLAttributes,\n  ButtonHTMLAttributes,\n  forwardRef,\n} from \"react\";\nimport \"./proceed-button.scss\";\n\ninterface IProceedButtonComponentProps\n  extends ButtonHTMLAttributes<HTMLButtonElement> {\n  disabled?: boolean;\n  loading?: boolean;\n  loadingText?: string | React.ReactNode;\n  withArrow?: boolean;\n  icon?: React.ReactNode;\n}\ninterface IProceedLinkComponentProps\n  extends AnchorHTMLAttributes<HTMLAnchorElement> {\n  disabled?: boolean;\n  loading?: boolean;\n  loadingText?: string | React.ReactNode;\n  withArrow?: boolean;\n}\n\nfunction proceedAppearance({\n  disabled,\n  loading,\n}: {\n  disabled: boolean;\n  loading: boolean;\n}) {\n  const stateClassName = disabled\n    ? \"ProceedButton--disabled\"\n    : loading\n    ? \"ProceedButton--loading\"\n    : \"ProceedButton--active\";\n\n  return stateClassName;\n}\n\nexport const ProceedLink = forwardRef<\n  HTMLAnchorElement,\n  IProceedLinkComponentProps\n>(\n  (\n    {\n      disabled = false,\n      children,\n      loading = false,\n      className,\n      withArrow = true,\n      loadingText,\n      href,\n      ...rest\n    },\n    ref\n  ) => {\n    const stateClassName = proceedAppearance({ disabled, loading });\n    return (\n      <a\n        ref={ref}\n        className={classNames(\"ProceedButton\", stateClassName, className)}\n        href={disabled ? undefined : href}\n        {...rest}\n      >\n        {loading && loadingText ? (\n          <>\n            <span></span>\n            <span>{loadingText}</span>\n            <span></span>\n          </>\n        ) : (\n          <>\n            <span></span>\n            <span>{children}</span>\n            <span></span>\n          </>\n        )}\n      </a>\n    );\n  }\n);\n\nexport const ProceedButton = forwardRef<\n  HTMLButtonElement,\n  IProceedButtonComponentProps\n>(\n  (\n    {\n      disabled = false,\n      children,\n      loading = false,\n      className,\n      withArrow = true,\n      loadingText,\n      icon,\n      ...rest\n    },\n    ref\n  ) => {\n    const stateClassName = proceedAppearance({ disabled, loading });\n\n    return (\n      <button\n        ref={ref}\n        className={classNames(\"ProceedButton\", stateClassName, className)}\n        disabled={disabled}\n        {...rest}\n      >\n        {loading && loadingText ? (\n          <>\n            <span></span>\n            <span>{loadingText}</span>\n            <span></span>\n          </>\n        ) : (\n          <>\n            <span></span>\n            <span>{children}</span>\n            <span></span>\n          </>\n        )}\n        {icon && <div className={\"ProceedButton__icon\"}>{icon}</div>}\n      </button>\n    );\n  }\n);\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport \"./input.scss\";\n\ninterface IInputComponentProps\n  extends React.LabelHTMLAttributes<HTMLLabelElement> {\n  slotAfterInput?: React.ReactNode;\n  slotAfterLabel?: React.ReactNode;\n  slotRight?: React.ReactNode;\n  label: React.ReactNode;\n  error?: string;\n  size?: \"big\" | \"normal\" | \"small\";\n  textSize?: \"\" | \"small\" | \"normal\" | \"big\";\n}\n\nexport function Input({\n  label,\n  slotAfterInput,\n  slotRight,\n  slotAfterLabel,\n  children,\n  error,\n  size = \"normal\",\n  textSize = \"normal\",\n  className,\n  placeholder,\n  ...rest\n}: IInputComponentProps): JSX.Element {\n  if (slotAfterInput && slotRight) {\n    throw Error(\"Only one of after input slots can be used\");\n  }\n\n  return (\n    <label\n      className={classNames(\"Input\", error ? \"Input--hasError\" : \"\", className)}\n      {...rest}\n    >\n      <div className=\"flex\">\n        <div className=\"flex-grow\">\n          <div className={\"Input__header\"}>\n            <div className={\"Input__label\"}>{label}</div>\n            {slotAfterLabel}\n          </div>\n          <div className={\"Input__wrapper\"}>\n            {typeof children === \"function\"\n              ? children({ inputClass: \"Input__input\" })\n              : children}\n            {slotAfterInput ? (\n              <div className={\"Input__after\"}>{slotAfterInput}</div>\n            ) : null}\n          </div>\n        </div>\n        {slotRight ? (\n          <div className={\"Input__afterCentered\"}>{slotRight}</div>\n        ) : null}\n      </div>\n      {error ? <div className={\"Input__error\"}>{error}</div> : null}\n    </label>\n  );\n}\n","import classNames from \"classnames\";\nimport React, { HTMLAttributes } from \"react\";\n\nimport \"./icon.scss\";\n\nexport type TCreditCardIconName =\n  | \"amex\"\n  | \"card\"\n  | \"mastercard\"\n  | \"unionpay\"\n  | \"visa\";\n\nexport type TCurrencyIconName =\n  | \"currency-btc\"\n  | \"currency-usd\"\n  | \"currency-near\";\n\nexport type TIconName =\n  | \"arrow-up-circle\"\n  | \"info-square\"\n  | \"dropdown-arrow\"\n  | \"arrow-right-square\"\n  | \"near-pay-logo\"\n  | \"spinner\";\n\ninterface ICssTransform {\n  rotate?: string;\n}\n\ninterface IIconComponentProps extends HTMLAttributes<HTMLDivElement> {\n  icon?: TIconName | TCurrencyIconName | TCreditCardIconName;\n  renderIcon?: React.ReactNode;\n  size?: number;\n  transform?: ICssTransform;\n}\n\nfunction buildTransform(transform: ICssTransform): string {\n  if (!transform) return \"\";\n\n  const properties: string[] = [];\n\n  for (const [property, value] of Object.entries(transform)) {\n    properties.push(`${property}(${value})`);\n  }\n\n  return properties.join(\",\");\n}\n\nexport function Icon({\n  icon = \"info-square\",\n  className,\n  transform,\n  size,\n  children,\n  ...rest\n}: IIconComponentProps): JSX.Element {\n  // const IconComponent = icons[icon];\n\n  const transformProp = buildTransform(transform || {});\n\n  return (\n    <i\n      className={classNames(\"pay-with-near-icon\", className)}\n      style={{ transform: transformProp, width: size, height: size }}\n      {...rest}\n    >\n      {children}\n      {/* {children ||\n        (IconComponent && (\n          <Suspense fallback={<span></span>}>\n            <IconComponent />\n          </Suspense>\n        ))} */}\n    </i>\n  );\n}\n","import classNames from \"classnames\";\nimport { ICurrency } from \"lib/api/currencies\";\nimport {HTMLAttributes, useCallback, useState} from \"react\";\nimport { NpDropdownArrowIcon } from \"ui\";\nimport { Icon } from \"ui/icon\";\n\nimport \"./currency-select.scss\";\n\ninterface ICurrencySelectComponentProps extends HTMLAttributes<HTMLDivElement> {\n  currency: ICurrency;\n  disabled: boolean;\n  options?: ICurrency[];\n  onCurrencySelectClick: (currencyName: string) => void;\n}\n\nexport function CurrencySelect({\n  currency,\n  options,\n  className,\n  disabled,\n  onCurrencySelectClick,\n  ...rest\n}: ICurrencySelectComponentProps): JSX.Element {\n    const [isOpen, setOpen] = useState(false);\n\n    const isMobile = () => Boolean(navigator.userAgent.match(/Android/i) ||\n        navigator.userAgent.match(/iPhone/i));\n\n    const toggleOpen = useCallback(\n        () => {\n            setOpen((prev) => !prev);\n        },\n        [],\n    );\n\n    const chooseOption = useCallback(\n        (value: string) => {\n            toggleOpen();\n            onCurrencySelectClick(value);\n        }, [],\n    )\n  return (\n        <div\n          className={classNames(\n            \"CurrencySelect\",\n            disabled ? \"CurrencySelect--disabled\" : \"\",\n            className\n          )}\n          {...rest}\n        >\n            { isMobile()\n                ? <>\n                    <Icon className={\"CurrencySelect__icon\"}>\n                        <img src={currency.logoUrl} alt={currency.viewedTicker} />\n                    </Icon>\n                    <select className={\"CurrencySelect__select\"}\n                            onChange={(event) => onCurrencySelectClick(event.target.value)}\n                    >\n                        {\n                            options?.map(option => (\n                                <option key={option.ticker} value={option.ticker}>{option.ticker}</option>\n                            ))\n                        }\n\n                    </select>\n                </>\n                : <>\n                    <div className={\"CurrencySelect__container\"}>\n                        <button  className={\"CurrencySelect__button\"} onClick={toggleOpen}>\n                            <Icon className={\"CurrencySelect__icon\"}>\n                                <img src={currency.logoUrl} alt={currency.viewedTicker} />\n                            </Icon>\n                            <div className={\"CurrencySelect__text\"}>{currency.ticker}</div>\n                            <Icon size={20} className={\"CurrencySelect__arrow\"}>\n                                <NpDropdownArrowIcon />\n                            </Icon>\n                        </button>\n                        {isOpen && <ul className={\"CurrencySelect__list\"}>\n                            {\n                                options?.map(option => (\n                                    <li key={option.ticker} className={\"CurrencySelect__item\"} onClick={() => chooseOption(option.ticker)}>\n                                        <Icon className={\"CurrencySelect__icon\"}>\n                                            <img src={option.logoUrl} alt={option.ticker} />\n                                        </Icon>\n                                        {option.ticker}\n                                    </li>\n                                ))\n                            }\n                        </ul>}\n                    </div>\n                </>}\n        </div>\n  );\n}\n","import { ICurrency } from 'lib/api/currencies';\nimport React from 'react';\nimport NumberFormat, { NumberFormatValues } from 'react-number-format';\nimport { Input } from 'ui/input';\nimport { CurrencySelect } from './currency-select';\n\ninterface ICurrencyInputComponentProps\n  extends React.HTMLAttributes<HTMLElement> {\n  onValueChange: (values: NumberFormatValues) => void;\n  currency: ICurrency;\n  onCurrencySelectClick: (currencyName: string) => void;\n  renderAfter?: React.ReactNode;\n  value?: string;\n  label: React.ReactNode;\n  error?: string;\n  selectDisabled?: boolean;\n  inputDisabled?: boolean;\n  isLoading?: boolean;\n  currencies?: ICurrency[];\n}\n\nexport function CurrencyInput({\n  onInput,\n  value,\n  label,\n  onValueChange,\n  onCurrencySelectClick,\n  error,\n  selectDisabled,\n  inputDisabled,\n  currency,\n  currencies,\n  isLoading = false,\n  ...rest\n}: ICurrencyInputComponentProps): JSX.Element {\n  const prefix = currency.symbol;\n  // const suffix = currency.symbol ? '' : '' + currency.ticker.toUpperCase();\n\n  return (\n    <Input\n      label={label}\n      error={error}\n      slotAfterInput={\n        <CurrencySelect\n          currency={currency}\n          onCurrencySelectClick={\n            selectDisabled\n              ? () => {}\n              : onCurrencySelectClick\n          }\n          disabled={!!selectDisabled}\n          options={currencies}\n        />\n      }\n      {...rest}\n    >\n      {isLoading ? (\n        <input disabled readOnly/>\n      ) : (\n        <NumberFormat\n          thousandSeparator={false}\n          prefix={prefix}\n          onValueChange={onValueChange}\n          allowLeadingZeros={true}\n          decimalScale={currency.roundOff}\n          onInput={onInput}\n          value={value}\n          placeholder=\"0.00\"\n          readOnly={inputDisabled}\n        />\n      )}\n    </Input>\n  );\n}\n","import './widget-container.scss';\nimport classNames from 'classnames';\nimport React, { HTMLAttributes } from 'react';\n\nexport function WidgetContainer({\n  className,\n  ...rest\n}: HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div className={classNames('WidgetContainer', className)} {...rest}></div>\n  );\n}\n","import \"./expiry-timer.scss\";\n\nimport { block } from \"bem-cn\";\nimport { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\n\nconst b = block(\"pay-with-near-pay-timer\");\n\ninterface Props {\n  expiryAt: string;\n  onExpired: () => void;\n}\nexport const ExpiryTimer: React.FC<Props> = (props) => {\n  const { expiryAt, onExpired } = props;\n  const [timeLeft, setTimeLeft] = useState(getTimeLeft(expiryAt));\n\n  useEffect(() => {\n    if (getTimeLeft(expiryAt) < 0) {\n      onExpired();\n    }\n\n    const timer = setTimeout(() => {\n      setTimeLeft(getTimeLeft(expiryAt));\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, [timeLeft, expiryAt, onExpired]);\n\n  if (getTimeLeft(expiryAt) < 0) {\n    return null;\n  }\n\n  return <div className={b()}>{msecToTimeFormat(timeLeft)}</div>;\n};\n\nconst getTimeLeft = (expiryAt: string): number => {\n  const expiryAtDayjs = dayjs(expiryAt);\n  const curDayjs = dayjs.utc();\n\n  const millisecondLeft = expiryAtDayjs.diff(curDayjs);\n\n  return millisecondLeft;\n};\n\nconst msecToTimeFormat = (ms: number): string => {\n  const minutes = Math.floor(ms / (60 * 1000));\n  const minutesMs = ms % (60 * 1000);\n  const seconds = Math.floor(minutesMs / 1000);\n\n  return `${minutes}:${seconds > 9 ? seconds : `0${seconds}`}`;\n};\n","import \"./pay-widget.scss\";\n\nimport { block } from \"bem-cn\";\nimport { NpLogoIcon } from \"ui\";\nimport { ProceedButton } from \"components/proceed-button\";\nimport { ICurrency } from \"lib/api/currencies\";\nimport { CurrencyInput } from \"components/currency-input\";\nimport classNames from \"classnames\";\nimport { WidgetContainer } from \"ui/widget-container/widget-container\";\nimport { TPayment } from \"lib/api\";\nimport { ExpiryTimer } from \"components/expiry-timer\";\nimport { QRCodeSVG } from \"qrcode.react\";\nimport {useCallback, useEffect, useState} from \"react\";\nimport {snakeToCamel} from \"../../helpers/main\";\n\nconst b = block(\"pay-with-near-pay-widget\");\nconst bDescription = block(\"pay-with-near-pay-widget-description\");\n\ninterface Props {\n  payment: TPayment;\n  defaultCurrency: ICurrency;\n  onPay: (currency: ICurrency) => void;\n  onExpired: () => void;\n  currencies?: ICurrency[];\n}\nexport const PayWidget: React.FC<Props> = (props) => {\n  const { payment, defaultCurrency, onPay, onExpired, currencies } = props;\n\n  const [currency, setCurrency] = useState<ICurrency>();\n\n  const changeCurrency = useCallback((currency: string) => {\n      const currentCurrency = currencies?.find(item => item.ticker === currency);\n      setCurrency(currentCurrency);\n  }, []);\n\n  return (\n    <WidgetContainer className={b()}>\n      <div className={b(\"title\")}>{payment.name}</div>\n      <div className={b(\"description\")}>{payment.description}</div>\n      <div className={bDescription()}>\n        <div>\n          <div className={bDescription(\"label\")}>Payment: </div>\n          <div>{payment.paymentId}</div>\n        </div>\n        <div>\n          <div className={bDescription(\"label\")}>Recipient: </div>\n          <div className={bDescription(\"address\")}>{payment.address}</div>\n        </div>\n      </div>\n      <ExpiryTimer expiryAt={payment.expiryAt} onExpired={onExpired} />\n      <CurrencyInput\n        label={\"Amount to Pay\"}\n        value={payment[(snakeToCamel(currency?.parameter || defaultCurrency?.parameter) as keyof TPayment)]}\n        currency={currency || defaultCurrency}\n        onValueChange={() => {}}\n        onCurrencySelectClick={changeCurrency}\n        selectDisabled={false}\n        currencies={currencies}\n        className=\"mb-4\"\n      />\n      <ProceedButton onClick={() => onPay(currency || defaultCurrency)}>Pay with NEAR wallet</ProceedButton>\n\n      <div className={b(\"or\")}>or</div>\n\n      <div className={b(\"qr-code-container\")}>\n        <QRCodeSVG\n          value={`${payment.address}?amount=${payment.displayAmount}`}\n        />\n      </div>\n\n      <div className={b(\"payment-method-text\")}>\n        Scan following&nbsp;QR code with your wallet or&nbsp;enter\n        Account&nbsp;ID&nbsp;and amount manually.\n      </div>\n\n      <a\n        href=\"http://nearpay.co\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={classNames(b(\"link-nearpay\"))}\n      >\n        <span className={b(\"link-nearpay_gray\")}>Powered by</span>\n        {\"  \"}\n        <NpLogoIcon className={b(\"link-nearpay_icon\")} width=\"20\" height=\"15\" />\n        {\"  \"}\n        <span>NearPay</span>\n      </a>\n    </WidgetContainer>\n  );\n};\n","export const snakeToCamel = (str: string): string =>\n    str.toLowerCase().replace(/([-_][a-z])/g, group =>\n        group\n            .toUpperCase()\n            .replace('-', '')\n            .replace('_', '')\n    );\n","import {currenciesApi, TPayment} from \"lib/api\";\nimport {environment} from \"lib/config\";\nimport {nearToYoktoNear, useNear} from \"lib/near\";\nimport {usePayment} from \"models/payment\";\nimport {useMemo, useState} from \"react\";\nimport useSWR from \"swr\";\nimport {useParams} from \"react-router\";\nimport {ICurrency} from \"../../lib/api/currencies\";\nimport {Contract} from \"near-api-js\";\n\nexport const useModel = () => {\n  const { id: paymentId } = useParams();\n  const currenciesSwr = useSWR(\"currencies\", () => currenciesApi.fetchCurrencies(paymentId));\n  const { payment, isExpired, handleExpired } = usePayment();\n  const near = useNear();\n  const handlerPay = useHandlerPay({ near, payment: payment ?? null });\n\n  const defaultCurrency = useMemo(\n    () =>\n      currenciesSwr.data?.find((c) => c.ticker === environment.defaultCurrency),\n    [currenciesSwr]\n  );\n  const isLoaded =\n    !!currenciesSwr.data && (!!payment || isExpired) && near.isReady;\n\n  return {\n    isExpired,\n    isLoaded,\n    payment: payment,\n    currencies: currenciesSwr.data,\n    defaultCurrency,\n    handlerPay,\n    handleExpired,\n  };\n};\n\nconst basePath = `${window.location.origin}/payment`;\n\ntype UsePayParams = {\n  near: ReturnType<typeof useNear>;\n  payment: TPayment | null;\n};\nconst useHandlerPay = (params: UsePayParams) => {\n  const { near, payment } = params;\n\n  if (!payment) {\n    return () => {\n      throw new Error(\"Payment is empty\");\n    };\n  }\n\n  if (!near.isAuthorized) {\n    return () =>\n      near.login({\n        successUrl: `${basePath}/${payment.paymentId}/send`,\n        failureUrl: `${basePath}/${payment.paymentId}/failure`,\n      });\n  }\n\n  return (currency: ICurrency) => {\n    switch (currency.ticker) {\n      case 'NEAR':\n        const yoktoNearAmount = nearToYoktoNear(+payment.displayAmount);\n\n        if (!yoktoNearAmount || !payment.address) {\n          throw new Error(\"Data is empty\");\n        }\n\n        near.send(\n          yoktoNearAmount,\n          payment.address,\n          `${basePath}/${payment.paymentId}/pending`\n        );\n        break;\n      case 'USN':\n        const usnUnits = +payment.displayAmountUsd * 1e18;\n\n        if (!usnUnits || !payment.address) {\n          throw new Error(\"Data is empty\");\n        }\n\n        near.ftTransfer('' + usnUnits, 'usn', payment.address, `${basePath}/${payment.paymentId}/pending`);\n        break;\n      default:\n        throw new Error('Unsupported currency');\n    }\n  };\n};\n","import { Agreement } from \"components/agreement\";\nimport { PayWidget } from \"components/pay-widget\";\nimport { useModel } from \"./model\";\nimport { GeneralLayout, Loader, LoaderContainer } from \"ui\";\nimport { block } from \"bem-cn\";\nimport \"./payment-page.scss\";\nimport { environment } from \"lib/config\";\n\nconst b = block(\"pay-with-near-payment-page\");\n\nexport function PaymentPage() {\n  const { defaultCurrency, payment, isLoaded, isExpired, handlerPay, handleExpired, currencies } =\n    useModel();\n\n  if (!isLoaded) {\n    return (\n      <GeneralLayout>\n        <LoaderContainer>\n          <Loader />\n        </LoaderContainer>\n      </GeneralLayout>\n    );\n  }\n\n  if (isExpired) {\n    return (\n      <GeneralLayout className={b()}>\n        <span className={b(\"message\")}>This payment link is expired</span>\n        <a className={b(\"link\")} href={environment.payWithNearUrl}>\n          Back to shop\n        </a>\n      </GeneralLayout>\n    );\n  }\n\n  if (!payment || !defaultCurrency) {\n    return null;\n  }\n\n  return (\n    <GeneralLayout>\n      <PayWidget\n        payment={payment}\n        defaultCurrency={defaultCurrency}\n        onPay={handlerPay}\n        onExpired={handleExpired}\n        currencies={currencies}\n      />\n      <Agreement />\n    </GeneralLayout>\n  );\n}\n","import { PaymentPage } from \"./payment-page\";\nexport default PaymentPage;\n"],"names":["b","block","Agreement","props","className","mix","href","target","rel","proceedAppearance","disabled","loading","ProceedButton","forwardRef","ref","children","loadingText","withArrow","icon","rest","stateClassName","classNames","Input","label","slotAfterInput","slotRight","slotAfterLabel","error","size","textSize","placeholder","Error","inputClass","Icon","transform","transformProp","properties","Object","entries","property","value","push","join","buildTransform","style","width","height","CurrencySelect","currency","options","onCurrencySelectClick","useState","isOpen","setOpen","toggleOpen","useCallback","prev","chooseOption","Boolean","navigator","userAgent","match","src","logoUrl","alt","viewedTicker","onChange","event","map","option","ticker","onClick","CurrencyInput","onInput","onValueChange","selectDisabled","inputDisabled","currencies","isLoading","prefix","symbol","readOnly","thousandSeparator","allowLeadingZeros","decimalScale","roundOff","WidgetContainer","ExpiryTimer","expiryAt","onExpired","getTimeLeft","timeLeft","setTimeLeft","useEffect","timer","setTimeout","clearTimeout","msecToTimeFormat","expiryAtDayjs","dayjs","curDayjs","diff","ms","minutes","Math","floor","minutesMs","seconds","bDescription","PayWidget","str","payment","defaultCurrency","onPay","setCurrency","changeCurrency","currentCurrency","find","item","name","description","paymentId","address","parameter","toLowerCase","replace","group","toUpperCase","displayAmount","basePath","window","location","origin","useHandlerPay","params","near","isAuthorized","yoktoNearAmount","nearToYoktoNear","send","usnUnits","displayAmountUsd","ftTransfer","login","successUrl","failureUrl","useParams","id","currenciesSwr","useSWR","currenciesApi","usePayment","isExpired","handleExpired","useNear","handlerPay","useMemo","data","c","environment","isLoaded","isReady","useModel"],"sourceRoot":""}